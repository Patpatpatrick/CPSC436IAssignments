{"ast":null,"code":"import { combineReducers } from 'redux';\nconst defaultState = {\n  count: 1[{\n    fromname: 'LGY',\n    toname: 'YGL',\n    category: 'A',\n    textcontent: 'Hello!',\n    date: new Date()\n  }]\n};\n\nconst messageReducer = (state = defaultState, action) => {\n  switch (action.type) {\n    case 'GEN_MESSAGE':\n      console.log(action.message.fromname);\n      console.log([...state, action.message]);\n      return [...state, action.message];\n\n    case 'CLEAR_ALL':\n      console.log(state);\n      return [];\n\n    case 'CLEAR_ONE':\n      return state.slice(0, action.toDelIndex).concat(state.slice(action.toDelIndex + 1));\n\n    default:\n      return state;\n  }\n};\n\nexport default combineReducers({\n  messageProcess: messageReducer //anotherKey: anotherReducer //all your reducers should be combined\n\n});","map":{"version":3,"sources":["/Users/mac/Workspaces/cpsc436assignment2/src/reducers/index.js"],"names":["combineReducers","defaultState","count","fromname","toname","category","textcontent","date","Date","messageReducer","state","action","type","console","log","message","slice","toDelIndex","concat","messageProcess"],"mappings":"AAAA,SAASA,eAAT,QAAgC,OAAhC;AACA,MAAMC,YAAY,GAAG;AACpBC,EAAAA,KAAK,EAAG,EACP;AACDC,IAAAA,QAAQ,EAAE,KADT;AAEDC,IAAAA,MAAM,EAAE,KAFP;AAGDC,IAAAA,QAAQ,EAAG,GAHV;AAIDC,IAAAA,WAAW,EAAG,QAJb;AAKDC,IAAAA,IAAI,EAAG,IAAIC,IAAJ;AALN,GADO;AADY,CAArB;;AAUA,MAAMC,cAAc,GAAG,CAACC,KAAK,GAAGT,YAAT,EAAuBU,MAAvB,KAAkC;AACxD,UAAOA,MAAM,CAACC,IAAd;AACC,SAAK,aAAL;AACCC,MAAAA,OAAO,CAACC,GAAR,CAAYH,MAAM,CAACI,OAAP,CAAeZ,QAA3B;AACAU,MAAAA,OAAO,CAACC,GAAR,CAAY,CAAC,GAAGJ,KAAJ,EAAUC,MAAM,CAACI,OAAjB,CAAZ;AACA,aAAO,CAAC,GAAGL,KAAJ,EAAUC,MAAM,CAACI,OAAjB,CAAP;;AACD,SAAK,WAAL;AACCF,MAAAA,OAAO,CAACC,GAAR,CAAYJ,KAAZ;AACA,aAAO,EAAP;;AACD,SAAK,WAAL;AACC,aAAOA,KAAK,CAACM,KAAN,CAAY,CAAZ,EAAcL,MAAM,CAACM,UAArB,EAAiCC,MAAjC,CAAwCR,KAAK,CAACM,KAAN,CAAYL,MAAM,CAACM,UAAP,GAAkB,CAA9B,CAAxC,CAAP;;AACD;AACC,aAAOP,KAAP;AAXF;AAaA,CAdD;;AAgBA,eAAeV,eAAe,CAAC;AAC9BmB,EAAAA,cAAc,EAAEV,cADc,CAE3B;;AAF2B,CAAD,CAA9B","sourcesContent":["import { combineReducers } from 'redux';\nconst defaultState = {\n\tcount : 1\n\t[{\n\tfromname: 'LGY',\n\ttoname: 'YGL',\n\tcategory : 'A',\n\ttextcontent : 'Hello!',\n\tdate : new Date()\n\t}]\n};\nconst messageReducer = (state = defaultState, action) => {\n\tswitch(action.type){\n\t\tcase 'GEN_MESSAGE' :\n\t\t\tconsole.log(action.message.fromname);\n\t\t\tconsole.log([...state,action.message]);\n\t\t\treturn [...state,action.message];\n\t\tcase 'CLEAR_ALL':\n\t\t\tconsole.log(state);\n\t\t\treturn [];\n\t\tcase 'CLEAR_ONE':\n\t\t\treturn state.slice(0,action.toDelIndex).concat(state.slice(action.toDelIndex+1));\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};\n\nexport default combineReducers({ \n\tmessageProcess: messageReducer,\n    //anotherKey: anotherReducer //all your reducers should be combined\n});\n"]},"metadata":{},"sourceType":"module"}