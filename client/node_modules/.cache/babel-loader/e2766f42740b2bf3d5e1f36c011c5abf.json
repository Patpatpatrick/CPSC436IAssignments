{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Workspaces/cpsc436assignment2/client/src/components/PopUp.js\";\nimport React from 'react';\nimport './style.css';\nimport { connect } from 'react-redux';\nimport { closePopedMessage } from '../actions/popUpActions';\nimport { uploadData } from '../actions/postActions'; // import { changePopedMessage } from '../actions/popUpActions';\n\nclass Popup extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.renderMessage = () => {\n      return React.createElement(\"div\", {\n        className: \"popup_inner\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        onSubmit: this.uploadChange,\n        onChange: this.handleChange,\n        className: \"form\",\n        ref: \"inputform\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"fname\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, \"From\"), React.createElement(\"input\", {\n        type: \"text\",\n        name: \"fromname\",\n        defaultValue: this.props.message.fromname,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        htmlFor: \"tname\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, \"To\"), React.createElement(\"input\", {\n        type: \"text\",\n        name: \"toname\",\n        defaultValue: this.props.message.toname,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        htmlFor: \"Category\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, \"Category\"), React.createElement(\"input\", {\n        type: \"text\",\n        name: \"category\",\n        defaultValue: this.props.message.category,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        htmlFor: \"subject\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, \"Content\"), React.createElement(\"textarea\", {\n        id: \"subject\",\n        name: \"textcontent\",\n        placeholder: this.props.message.textcontent,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }), React.createElement(\"center\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        type: \"submit\",\n        value: \"Submit\",\n        id: \"submitEditBtn\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, \"save change\"), React.createElement(\"button\", {\n        type: \"close\",\n        onClick: this.props.closePopedMessage,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, \"Cancel/Close\"))));\n    };\n\n    this.state = {\n      fromname: '',\n      toname: '',\n      category: '',\n      textcontent: ''\n    };\n    this.uploadChange = this.uploadChange.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  uploadChange() {\n    console.log('trying to update');\n    console.log(this.props.index);\n    this.props.updataMessage('http://localhost:3001/changeMessage/' + this.props.popUpIndex, this.state, 'PUT');\n  }\n\n  handleChange(event) {\n    console.log('trying to change');\n    console.log(this.props.popUpIndex);\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"popup\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, this.renderMessage());\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    message: state.fetchReducers.popUpMessage\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    closePopedMessage: () => {\n      dispatch(closePopedMessage());\n    },\n    updataMessage: (url, data, method) => {\n      dispatch(uploadData(url, data, method));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Popup);","map":{"version":3,"sources":["/Users/mac/Workspaces/cpsc436assignment2/client/src/components/PopUp.js"],"names":["React","connect","closePopedMessage","uploadData","Popup","Component","constructor","props","renderMessage","uploadChange","handleChange","message","fromname","toname","category","textcontent","state","bind","console","log","index","updataMessage","popUpIndex","event","setState","target","name","value","render","mapStateToProps","fetchReducers","popUpMessage","mapDispatchToProps","dispatch","url","data","method"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './style.css'\nimport { connect } from 'react-redux';\nimport { closePopedMessage } from '../actions/popUpActions';\nimport { uploadData } from '../actions/postActions';\n// import { changePopedMessage } from '../actions/popUpActions';\n\n\nclass Popup extends React.ComponentÂ {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n          fromname: '',\n          toname: '',\n          category: '',\n          textcontent: ''\n      };\n        this.uploadChange = this.uploadChange.bind(this);\n        this.handleChange = this.handleChange.bind(this);\n    }\n    uploadChange () {\n      console.log('trying to update');\n      console.log(this.props.index);\n      this.props.updataMessage('http://localhost:3001/changeMessage/' + this.props.popUpIndex, this.state,'PUT');\n    }\n    handleChange (event) {\n      console.log('trying to change');\n        console.log(this.props.popUpIndex);\n        this.setState({ [event.target.name]: event.target.value });\n    }\n    renderMessage = () => {\n      return (\n                <div className='popup_inner' >\n                  <form onSubmit={this.uploadChange} onChange={this.handleChange} className=\"form\" ref = \"inputform\">\n                    <label htmlFor=\"fname\">From</label>\n                    <input type = 'text' name = 'fromname' defaultValue = {this.props.message.fromname}/>\n\n                    <label htmlFor=\"tname\">To</label>\n                    <input type = 'text' name = 'toname' defaultValue = {this.props.message.toname}/>\n\n                    <label htmlFor=\"Category\">Category</label>\n                    <input type = 'text' name = 'category' defaultValue = {this.props.message.category}/>\n\n                    <label htmlFor=\"subject\">Content</label>\n                    <textarea id=\"subject\" name=\"textcontent\" placeholder= {this.props.message.textcontent}></textarea>\n                    <center>\n                        <button type = 'submit' value=\"Submit\" id = \"submitEditBtn\" >save change</button>\n                        <button type = 'close' onClick={this.props.closePopedMessage}>Cancel/Close</button>\n                    </center>\n                </form>\n                  \n                </div>\n              );\n    }\n\n    render() {\n      return (\n        <div className='popup'>\n            {this.renderMessage()}\n        </div>\n      );\n    }\n}\nconst mapStateToProps = (state) => {\n    return { \n        message: state.fetchReducers.popUpMessage\n    };\n}\nconst mapDispatchToProps = (dispatch) => {\n    return {\n      closePopedMessage: () => {\n        dispatch(closePopedMessage());\n      },\n      updataMessage: (url,data,method) => {\n        dispatch(uploadData(url,data,method));\n      }\n    }\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(Popup);\n\n\n"]},"metadata":{},"sourceType":"module"}