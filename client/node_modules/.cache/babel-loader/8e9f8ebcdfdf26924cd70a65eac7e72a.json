{"ast":null,"code":"import { combineReducers } from 'redux';\nimport messageArrayActions from '../actions/messageArrayActions';\nconst defaultState = {\n  count: 1,\n  unsubmittedMessage: {\n    fromname: '',\n    toname: '',\n    category: 'A',\n    textcontent: '',\n    date: new Date().toLocaleString()\n  },\n  popUp: false,\n  popUpMessageIndex: 0,\n  messageArray: []\n};\n\nconst messageReducer = (state = defaultState, action) => {\n  switch (action.type) {\n    case messageArrayActions.GEN_MESSAGE:\n      // console.log(state);\n      // console.log([...state.messageArray,state.unsubmittedMessage]);\n      console.log(state.count);\n      return {\n        count: state.count + 1,\n        unsubmittedMessage: state.unsubmittedMessage,\n        popUp: state.popUp,\n        popUpMessageIndex: state.popUpMessageIndex,\n        messageArray: [...state.messageArray, state.unsubmittedMessage]\n      };\n\n    case actions.CLEAR_ALL:\n      // console.log(state);\n      return {\n        count: 0,\n        unsubmittedMessage: state.unsubmittedMessage,\n        popUp: state.popUp,\n        popUpMessageIndex: state.popUpMessageIndex,\n        messageArray: []\n      };\n\n    case actions.CLEAR_ONE:\n      return {\n        count: state.count - 1,\n        unsubmittedMessage: state.unsubmittedMessage,\n        popUp: state.popUp,\n        popUpMessageIndex: state.popUpMessageIndex,\n        messageArray: [...state.messageArray.slice(0, action.toDelIndex).concat(state.messageArray.slice(action.toDelIndex + 1))]\n      };\n\n    case actions.VIEW_ONE:\n      console.log('wwww' + action.toViewIndex);\n      return {\n        count: state.count,\n        unsubmittedMessage: state.unsubmittedMessage,\n        popUp: true,\n        popUpMessageIndex: action.toViewIndex,\n        messageArray: state.messageArray\n      };\n\n    case actions.UNVIEW_ONE:\n      return {\n        count: state.count,\n        unsubmittedMessage: state.unsubmittedMessage,\n        popUp: false,\n        popUpMessageIndex: 0,\n        messageArray: state.messageArray\n      };\n\n    case actions.CHANGE_INPUT:\n      var newMessage = Object.assign({}, state.unsubmittedMessage, {\n        [action.keyToChange]: action.valueToUpdate,\n        'date': new Date()\n      });\n      console.log(newMessage);\n      return {\n        count: state.count,\n        unsubmittedMessage: newMessage,\n        popUp: state.popUp,\n        popUpMessageIndex: state.popUpMessageIndex,\n        messageArray: state.messageArray\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default combineReducers({\n  messageProcess: messageReducer //anotherKey: anotherReducer //all your reducers should be combined\n\n});","map":{"version":3,"sources":["/Users/mac/Workspaces/cpsc436assignment2/client/src/reducers/index.js"],"names":["combineReducers","messageArrayActions","defaultState","count","unsubmittedMessage","fromname","toname","category","textcontent","date","Date","toLocaleString","popUp","popUpMessageIndex","messageArray","messageReducer","state","action","type","GEN_MESSAGE","console","log","actions","CLEAR_ALL","CLEAR_ONE","slice","toDelIndex","concat","VIEW_ONE","toViewIndex","UNVIEW_ONE","CHANGE_INPUT","newMessage","Object","assign","keyToChange","valueToUpdate","messageProcess"],"mappings":"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","sourcesContent":["import { combineReducers } from 'redux';\nimport messageArrayActions from '../actions/messageArrayActions';\nconst defaultState = {\n\tcount : 1,\n\tunsubmittedMessage : {\n\t\tfromname: '',\n\t\ttoname: '',\n\t\tcategory : 'A',\n\t\ttextcontent : '',\n\t\tdate : new Date().toLocaleString()\n\t},\n\tpopUp: false,\n\tpopUpMessageIndex : 0,\n\tmessageArray : []\n};\nconst messageReducer = (state = defaultState, action) => {\n\tswitch(action.type){\n\t\tcase messageArrayActions.GEN_MESSAGE :\n\t\t\t// console.log(state);\n\t\t\t// console.log([...state.messageArray,state.unsubmittedMessage]);\n\t\t\tconsole.log(state.count);\n\t\t\treturn {\n\t\t\t\tcount : state.count + 1,\n\t\t\t\tunsubmittedMessage : state.unsubmittedMessage,\n\t\t\t\tpopUp:  state.popUp,\n\t\t\t\tpopUpMessageIndex : state.popUpMessageIndex,\n\t\t\t\tmessageArray: [...state.messageArray,state.unsubmittedMessage]\n\t\t\t};\n\t\tcase actions.CLEAR_ALL:\n\t\t\t// console.log(state);\n\t\t\treturn {\n\t\t\t\tcount : 0,\n\t\t\t\tunsubmittedMessage : state.unsubmittedMessage,\n\t\t\t\tpopUp:  state.popUp,\n\t\t\t\tpopUpMessageIndex : state.popUpMessageIndex,\n\t\t\t\tmessageArray: []\n\t\t\t};\n\t\tcase actions.CLEAR_ONE:\n\t\t\treturn\t{\n\t\t\t\tcount : state.count - 1,\n\t\t\t\tunsubmittedMessage : state.unsubmittedMessage,\n\t\t\t\tpopUp: state.popUp,\n\t\t\t\tpopUpMessageIndex : state.popUpMessageIndex,\n\t\t\t\tmessageArray: [...state.messageArray.slice(0,action.toDelIndex).concat(state.messageArray.slice(action.toDelIndex+1))]\n\t\t\t};\n\t\tcase actions.VIEW_ONE:\n\t\t\tconsole.log('wwww'+action.toViewIndex);\n\t\t\treturn\t{\n\t\t\t\tcount : state.count,\n\t\t\t\tunsubmittedMessage : state.unsubmittedMessage,\n\t\t\t\tpopUp : true,\n\t\t\t\tpopUpMessageIndex : action.toViewIndex,\n\t\t\t\tmessageArray: state.messageArray\n\t\t\t};\n\t\tcase actions.UNVIEW_ONE:\n\t\t\treturn\t{\n\t\t\t\tcount : state.count,\n\t\t\t\tunsubmittedMessage : state.unsubmittedMessage,\n\t\t\t\tpopUp : false,\n\t\t\t\tpopUpMessageIndex : 0,\n\t\t\t\tmessageArray: state.messageArray\n\t\t\t};\n\t\tcase actions.CHANGE_INPUT :\n\t\t\tvar newMessage = Object.assign({}, state.unsubmittedMessage, \n\t\t\t\t{ \n\t\t\t\t\t[action.keyToChange]: action.valueToUpdate,\n\t\t\t\t\t'date' : new Date()\n\t\t\t\t}\n\t\t\t);\n\t\t\tconsole.log(newMessage);\n\t\t\treturn {\n\t\t\t\tcount : state.count,\n\t\t\t\tunsubmittedMessage : newMessage,\n\t\t\t\tpopUp : state.popUp,\n\t\t\t\tpopUpMessageIndex : state.popUpMessageIndex,\n\t\t\t\tmessageArray: state.messageArray\n\t\t\t};\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};\n\nexport default combineReducers({ \n\tmessageProcess: messageReducer,\n    //anotherKey: anotherReducer //all your reducers should be combined\n});\n"]},"metadata":{},"sourceType":"module"}