{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Workspaces/cpsc436assignment2/client/src/components/PopUp.js\";\nimport React from 'react';\nimport './style.css';\nimport { connect } from 'react-redux';\nimport { closePopedMessage } from '../actions/popUpActions';\n\nclass Popup extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.changeEditMode = field => {\n      this.setState({\n        field: !this.s\n      });\n    };\n\n    this.renderMessage = () => {\n      return React.createElement(\"div\", {\n        className: \"popup_inner\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        onDoubleClick: this.changeEditMode('fromEditMode'),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      }, \"from : \", this.props.message.fromname), React.createElement(\"div\", {\n        onDoubleClick: this.changeEditMode,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }, \"to : \", this.props.message.toname), React.createElement(\"div\", {\n        onDoubleClick: this.changeEditMode,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }, \"category: \", this.props.message.category), React.createElement(\"div\", {\n        onDoubleClick: this.changeEditMode,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }, \"content: \", this.props.message.textcontent), React.createElement(\"div\", {\n        onDoubleClick: this.changeEditMode,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }, \"date: \", this.props.message.date.toString()));\n    };\n\n    this.state = {\n      fromEditMode: false,\n      toEditMode: false,\n      catEditMode: false,\n      contentEditMode: false,\n      dateEditMode: false\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"popup\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, this.renderMessage(), React.createElement(\"button\", {\n      type: \"close\",\n      onClick: this.props.closePopedMessage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, \"close me\"), React.createElement(\"button\", {\n      type: \"edit\",\n      onClick: this.props,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, \"save change\"));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    message: state.fetchReducers.popUpMessage\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    closePopedMessage: () => {\n      dispatch(closePopedMessage());\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Popup);","map":{"version":3,"sources":["/Users/mac/Workspaces/cpsc436assignment2/client/src/components/PopUp.js"],"names":["React","connect","closePopedMessage","Popup","Component","constructor","props","changeEditMode","field","setState","s","renderMessage","message","fromname","toname","category","textcontent","date","toString","state","fromEditMode","toEditMode","catEditMode","contentEditMode","dateEditMode","render","mapStateToProps","fetchReducers","popUpMessage","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,aAAP;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,iBAAT,QAAkC,yBAAlC;;AAGA,MAAMC,KAAN,SAAoBH,KAAK,CAACI,SAA1B,CAAoC;AAChCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SAWnBC,cAXmB,GAWDC,KAAD,IAAW;AAC1B,WAAKC,QAAL,CAAc;AACZD,QAAAA,KAAK,EAAE,CAAC,KAAKE;AADD,OAAd;AAGD,KAfkB;;AAAA,SAiBnBC,aAjBmB,GAiBH,MAAM;AACpB,aACU;AAAK,QAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACM;AAAK,QAAA,aAAa,EAAI,KAAKJ,cAAL,CAAoB,cAApB,CAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAmE,KAAKD,KAAL,CAAWM,OAAX,CAAmBC,QAAtF,CADN,EAEM;AAAK,QAAA,aAAa,EAAI,KAAKN,cAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAiD,KAAKD,KAAL,CAAWM,OAAX,CAAmBE,MAApE,CAFN,EAGM;AAAK,QAAA,aAAa,EAAI,KAAKP,cAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAAsD,KAAKD,KAAL,CAAWM,OAAX,CAAmBG,QAAzE,CAHN,EAIM;AAAK,QAAA,aAAa,EAAI,KAAKR,cAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAqD,KAAKD,KAAL,CAAWM,OAAX,CAAmBI,WAAxE,CAJN,EAKM;AAAK,QAAA,aAAa,EAAI,KAAKT,cAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAkD,KAAKD,KAAL,CAAWM,OAAX,CAAmBK,IAAnB,CAAwBC,QAAxB,EAAlD,CALN,CADV;AASD,KA3BkB;;AAEf,SAAKC,KAAL,GAAa;AACXC,MAAAA,YAAY,EAAE,KADH;AAEXC,MAAAA,UAAU,EAAE,KAFD;AAGXC,MAAAA,WAAW,EAAE,KAHF;AAIXC,MAAAA,eAAe,EAAE,KAJN;AAKXC,MAAAA,YAAY,EAAE;AALH,KAAb;AAOH;;AAoBDC,EAAAA,MAAM,GAAG;AACP,WACE;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKd,aAAL,EADL,EAEI;AAAQ,MAAA,IAAI,EAAG,OAAf;AAAuB,MAAA,OAAO,EAAE,KAAKL,KAAL,CAAWJ,iBAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ,EAGI;AAAQ,MAAA,IAAI,EAAG,MAAf;AAAsB,MAAA,OAAO,EAAE,KAAKI,KAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAHJ,CADF;AAOD;;AAtC+B;;AAwCpC,MAAMoB,eAAe,GAAIP,KAAD,IAAW;AAC/B,SAAO;AACHP,IAAAA,OAAO,EAAEO,KAAK,CAACQ,aAAN,CAAoBC;AAD1B,GAAP;AAGH,CAJD;;AAKA,MAAMC,kBAAkB,GAAIC,QAAD,IAAc;AACrC,SAAO;AACL5B,IAAAA,iBAAiB,EAAE,MAAM;AACvB4B,MAAAA,QAAQ,CAAC5B,iBAAiB,EAAlB,CAAR;AACD;AAHI,GAAP;AAKH,CAND;;AAOA,eAAeD,OAAO,CAACyB,eAAD,EAAkBG,kBAAlB,CAAP,CAA6C1B,KAA7C,CAAf","sourcesContent":["import React from 'react';\nimport './style.css'\nimport { connect } from 'react-redux';\nimport { closePopedMessage } from '../actions/popUpActions';\n\n\nclass Popup extends React.ComponentÂ {\n    constructor(props) {\n        super(props);\n        this.state = {\n          fromEditMode: false,\n          toEditMode: false,\n          catEditMode: false,\n          contentEditMode: false,\n          dateEditMode: false,\n        };\n    }\n    \n    changeEditMode = (field) => {\n      this.setState({\n        field: !this.s\n      })\n    }\n\n    renderMessage = () => {\n      return (\n                <div className='popup_inner' >\n                      <div onDoubleClick = {this.changeEditMode('fromEditMode')}>from : {this.props.message.fromname}</div>\n                      <div onDoubleClick = {this.changeEditMode}>to : {this.props.message.toname}</div>\n                      <div onDoubleClick = {this.changeEditMode}>category: {this.props.message.category}</div>\n                      <div onDoubleClick = {this.changeEditMode}>content: {this.props.message.textcontent}</div>\n                      <div onDoubleClick = {this.changeEditMode}>date: {this.props.message.date.toString()}</div>\n                </div>\n              );\n    }\n\n    render() {\n      return (\n        <div className='popup'>\n            {this.renderMessage()}\n            <button type = 'close' onClick={this.props.closePopedMessage}>close me</button>\n            <button type = 'edit' onClick={this.props}>save change</button>\n        </div>\n      );\n    }\n}\nconst mapStateToProps = (state) => {\n    return { \n        message: state.fetchReducers.popUpMessage\n    };\n}\nconst mapDispatchToProps = (dispatch) => {\n    return {\n      closePopedMessage: () => {\n        dispatch(closePopedMessage());\n      }\n    }\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(Popup);\n\n\n"]},"metadata":{},"sourceType":"module"}