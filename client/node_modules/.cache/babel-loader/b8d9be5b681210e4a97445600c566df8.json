{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Workspaces/cpsc436assignment2/client/src/components/PopUp.js\";\nimport React from 'react';\nimport './style.css';\nimport { connect } from 'react-redux';\nimport { closePopedMessage } from '../actions/popUpActions';\n\nclass Popup extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.changeEditMode = () => {\n      this.setState({\n        editMode: !this.state.editMode\n      });\n    };\n\n    this.renderDefaultView = () => {\n      return React.createElement(\"div\", {\n        className: \"popup_inner\",\n        onDoubleClick: this.changeEditMode,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      }, \"from : \", this.props.message.fromname), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }, \"to : \", this.props.message.toname), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }, \"category: \", this.props.message.category), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }, \"content: \", this.props.message.textcontent), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }, \"date: \", this.props.message.date.toString()));\n    };\n\n    this.renderEditView = () => {};\n\n    this.state = {\n      editMode: false\n    };\n    this.changeEditMode = this.changeEditMode.bind(this);\n    this.renderDefaultView = this.renderDefaultView.bind(this);\n    this.renderEditView = this.renderEditView.bind(this);\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"popup\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, this.setState.editMode ? this.renderEditView : this.renderDefaultView(), React.createElement(\"button\", {\n      type: \"close\",\n      onClick: this.props.closePopedMessage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, \"close me\"), React.createElement(\"button\", {\n      type: \"edit\",\n      onClick: this.props,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, \"save change\"));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    message: state.fetchReducers.popUpMessage\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    closePopedMessage: () => {\n      dispatch(closePopedMessage());\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Popup);","map":{"version":3,"sources":["/Users/mac/Workspaces/cpsc436assignment2/client/src/components/PopUp.js"],"names":["React","connect","closePopedMessage","Popup","Component","constructor","props","changeEditMode","setState","editMode","state","renderDefaultView","message","fromname","toname","category","textcontent","date","toString","renderEditView","bind","render","mapStateToProps","fetchReducers","popUpMessage","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,aAAP;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,iBAAT,QAAkC,yBAAlC;;AAGA,MAAMC,KAAN,SAAoBH,KAAK,CAACI,SAA1B,CAAoC;AAChCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SAWnBC,cAXmB,GAWF,MAAM;AACrB,WAAKC,QAAL,CAAc;AACZC,QAAAA,QAAQ,EAAE,CAAC,KAAKC,KAAL,CAAWD;AADV,OAAd;AAGD,KAfkB;;AAAA,SAiBnBE,iBAjBmB,GAiBC,MAAM;AACxB,aACU;AAAK,QAAA,SAAS,EAAC,aAAf;AAA6B,QAAA,aAAa,EAAI,KAAKJ,cAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAa,KAAKD,KAAL,CAAWM,OAAX,CAAmBC,QAAhC,CADN,EAEM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAW,KAAKP,KAAL,CAAWM,OAAX,CAAmBE,MAA9B,CAFN,EAGM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAAgB,KAAKR,KAAL,CAAWM,OAAX,CAAmBG,QAAnC,CAHN,EAIM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAe,KAAKT,KAAL,CAAWM,OAAX,CAAmBI,WAAlC,CAJN,EAKM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAY,KAAKV,KAAL,CAAWM,OAAX,CAAmBK,IAAnB,CAAwBC,QAAxB,EAAZ,CALN,CADV;AASD,KA3BkB;;AAAA,SA6BnBC,cA7BmB,GA6BF,MAAM,CAEtB,CA/BkB;;AAEf,SAAKT,KAAL,GAAa;AACXD,MAAAA,QAAQ,EAAE;AADC,KAAb;AAGA,SAAKF,cAAL,GAAsB,KAAKA,cAAL,CAAoBa,IAApB,CAAyB,IAAzB,CAAtB;AACA,SAAKT,iBAAL,GAAyB,KAAKA,iBAAL,CAAuBS,IAAvB,CAA4B,IAA5B,CAAzB;AACA,SAAKD,cAAL,GAAsB,KAAKA,cAAL,CAAoBC,IAApB,CAAyB,IAAzB,CAAtB;AAEH;;AAwBDC,EAAAA,MAAM,GAAG;AACP,WACE;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKb,QAAL,CAAcC,QAAd,GAAyB,KAAKU,cAA9B,GAA8C,KAAKR,iBAAL,EADnD,EAEI;AAAQ,MAAA,IAAI,EAAG,OAAf;AAAuB,MAAA,OAAO,EAAE,KAAKL,KAAL,CAAWJ,iBAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ,EAGI;AAAQ,MAAA,IAAI,EAAG,MAAf;AAAsB,MAAA,OAAO,EAAE,KAAKI,KAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAHJ,CADF;AAOD;;AA1C+B;;AA4CpC,MAAMgB,eAAe,GAAIZ,KAAD,IAAW;AAC/B,SAAO;AACHE,IAAAA,OAAO,EAAEF,KAAK,CAACa,aAAN,CAAoBC;AAD1B,GAAP;AAGH,CAJD;;AAKA,MAAMC,kBAAkB,GAAIC,QAAD,IAAc;AACrC,SAAO;AACLxB,IAAAA,iBAAiB,EAAE,MAAM;AACvBwB,MAAAA,QAAQ,CAACxB,iBAAiB,EAAlB,CAAR;AACD;AAHI,GAAP;AAKH,CAND;;AAOA,eAAeD,OAAO,CAACqB,eAAD,EAAkBG,kBAAlB,CAAP,CAA6CtB,KAA7C,CAAf","sourcesContent":["import React from 'react';\nimport './style.css'\nimport { connect } from 'react-redux';\nimport { closePopedMessage } from '../actions/popUpActions';\n\n\nclass Popup extends React.ComponentÂ {\n    constructor(props) {\n        super(props);\n        this.state = {\n          editMode: false\n        };\n        this.changeEditMode = this.changeEditMode.bind(this);\n        this.renderDefaultView = this.renderDefaultView.bind(this);\n        this.renderEditView = this.renderEditView.bind(this);\n\n    }\n    \n    changeEditMode = () => {\n      this.setState({\n        editMode: !this.state.editMode\n      });\n    }\n\n    renderDefaultView = () => {\n      return (\n                <div className='popup_inner' onDoubleClick = {this.changeEditMode}>\n                      <div>from : {this.props.message.fromname}</div>\n                      <div>to : {this.props.message.toname}</div>\n                      <div>category: {this.props.message.category}</div>\n                      <div>content: {this.props.message.textcontent}</div>\n                      <div>date: {this.props.message.date.toString()}</div>\n                </div>\n              );\n    }\n\n    renderEditView = () => {\n\n    }\n\n    render() {\n      return (\n        <div className='popup'>\n            {this.setState.editMode ? this.renderEditView: this.renderDefaultView()}\n            <button type = 'close' onClick={this.props.closePopedMessage}>close me</button>\n            <button type = 'edit' onClick={this.props}>save change</button>\n        </div>\n      );\n    }\n}\nconst mapStateToProps = (state) => {\n    return { \n        message: state.fetchReducers.popUpMessage\n    };\n}\nconst mapDispatchToProps = (dispatch) => {\n    return {\n      closePopedMessage: () => {\n        dispatch(closePopedMessage());\n      }\n    }\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(Popup);\n\n\n"]},"metadata":{},"sourceType":"module"}