{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Workspaces/cpsc436assignment2/client/src/components/PopUp.js\";\nimport React from 'react';\nimport './style.css';\nimport { connect } from 'react-redux';\nimport { closePopedMessage } from '../actions/popUpActions';\n\nclass Popup extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      e\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    this.props.generateMessage();\n  }\n\n  handleChange(event) {\n    const target = event.target;\n    const value = target.value;\n    const name = target.name;\n    this.props.changeUnsubmittedMessage(name, value);\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"popup\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"popup_inner\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, \"from : \", this.props.message.fromname), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, \"to : \", this.props.message.toname), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, \"category: \", this.props.message.category), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, \"content: \", this.props.message.textcontent), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, \"date: \", this.props.message.date.toString()), React.createElement(\"button\", {\n      type: \"close\",\n      onClick: this.props.closePopedMessage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, \"close me\"), React.createElement(\"button\", {\n      type: \"edit\",\n      onClick: this.props,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, \"save change\")));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    message: state.fetchReducers.popUpMessage\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    closePopedMessage: () => {\n      dispatch(closePopedMessage());\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Popup);","map":{"version":3,"sources":["/Users/mac/Workspaces/cpsc436assignment2/client/src/components/PopUp.js"],"names":["React","connect","closePopedMessage","Popup","Component","constructor","props","state","e","handleChange","bind","handleSubmit","event","preventDefault","generateMessage","target","value","name","changeUnsubmittedMessage","render","message","fromname","toname","category","textcontent","date","toString","mapStateToProps","fetchReducers","popUpMessage","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,aAAP;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,iBAAT,QAAkC,yBAAlC;;AAGA,MAAMC,KAAN,SAAoBH,KAAK,CAACI,SAA1B,CAAoC;AAChCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA;AADW,KAAb;AAGA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAApB;AACA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBD,IAAlB,CAAuB,IAAvB,CAApB;AACH;;AACDC,EAAAA,YAAY,CAAEC,KAAF,EAAS;AACjBA,IAAAA,KAAK,CAACC,cAAN;AACA,SAAKP,KAAL,CAAWQ,eAAX;AACH;;AACDL,EAAAA,YAAY,CAAEG,KAAF,EAAS;AACjB,UAAMG,MAAM,GAAGH,KAAK,CAACG,MAArB;AACA,UAAMC,KAAK,GAAGD,MAAM,CAACC,KAArB;AACA,UAAMC,IAAI,GAAGF,MAAM,CAACE,IAApB;AACA,SAAKX,KAAL,CAAWY,wBAAX,CAAoCD,IAApC,EAAyCD,KAAzC;AACH;;AACDG,EAAAA,MAAM,GAAG;AACP,WACE;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAa,KAAKb,KAAL,CAAWc,OAAX,CAAmBC,QAAhC,CADN,EAEM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAW,KAAKf,KAAL,CAAWc,OAAX,CAAmBE,MAA9B,CAFN,EAGM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAgB,KAAKhB,KAAL,CAAWc,OAAX,CAAmBG,QAAnC,CAHN,EAIM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAe,KAAKjB,KAAL,CAAWc,OAAX,CAAmBI,WAAlC,CAJN,EAKM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAY,KAAKlB,KAAL,CAAWc,OAAX,CAAmBK,IAAnB,CAAwBC,QAAxB,EAAZ,CALN,EAMM;AAAQ,MAAA,IAAI,EAAG,OAAf;AAAuB,MAAA,OAAO,EAAE,KAAKpB,KAAL,CAAWJ,iBAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBANN,EAOM;AAAQ,MAAA,IAAI,EAAG,MAAf;AAAsB,MAAA,OAAO,EAAE,KAAKI,KAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAPN,CADF,CADF;AAaD;;AAjC+B;;AAmCpC,MAAMqB,eAAe,GAAIpB,KAAD,IAAW;AAC/B,SAAO;AACHa,IAAAA,OAAO,EAAEb,KAAK,CAACqB,aAAN,CAAoBC;AAD1B,GAAP;AAGH,CAJD;;AAKA,MAAMC,kBAAkB,GAAIC,QAAD,IAAc;AACrC,SAAO;AACL7B,IAAAA,iBAAiB,EAAE,MAAM;AACvB6B,MAAAA,QAAQ,CAAC7B,iBAAiB,EAAlB,CAAR;AACD;AAHI,GAAP;AAKH,CAND;;AAOA,eAAeD,OAAO,CAAC0B,eAAD,EAAkBG,kBAAlB,CAAP,CAA6C3B,KAA7C,CAAf","sourcesContent":["import React from 'react';\nimport './style.css'\nimport { connect } from 'react-redux';\nimport { closePopedMessage } from '../actions/popUpActions';\n\n\nclass Popup extends React.ComponentÂ {\n    constructor(props) {\n        super(props);\n        this.state = {\n          e\n      };\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n    handleSubmit (event) {\n        event.preventDefault();\n        this.props.generateMessage();\n    }\n    handleChange (event) {\n        const target = event.target;\n        const value = target.value;\n        const name = target.name;\n        this.props.changeUnsubmittedMessage(name,value);\n    }\n    render() {\n      return (\n        <div className='popup'>\n          <div className='popup_inner'>\n                <div>from : {this.props.message.fromname}</div>\n                <div>to : {this.props.message.toname}</div>\n                <div>category: {this.props.message.category}</div>\n                <div>content: {this.props.message.textcontent}</div>\n                <div>date: {this.props.message.date.toString()}</div>\n                <button type = 'close' onClick={this.props.closePopedMessage}>close me</button>\n                <button type = 'edit' onClick={this.props}>save change</button>\n          </div>\n        </div>\n      );\n    }\n}\nconst mapStateToProps = (state) => {\n    return { \n        message: state.fetchReducers.popUpMessage\n    };\n}\nconst mapDispatchToProps = (dispatch) => {\n    return {\n      closePopedMessage: () => {\n        dispatch(closePopedMessage());\n      }\n    }\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(Popup);\n\n\n"]},"metadata":{},"sourceType":"module"}