{"ast":null,"code":"import { combineReducers } from 'redux';\nconst defaultState = [{\n  fromname: '',\n  toname: '',\n  category: 'A',\n  textcontent: '',\n  date: new Date()\n}];\n\nconst messageReducer = (state = defaultState, action) => {\n  switch (action.type) {\n    case 'GEN_MESSAGE':\n      return [...state, action.message];\n\n    case 'CLEAR_ALL':\n      return [];\n\n    case 'CLEAR_ONE':\n      return state.slice(0, action.index).concat(state.slice(action.index + 1));\n  }\n\n  if (action.type === 'GEN_MESSAGE') {}\n\n  return state;\n};\n\nconst clearAllBtnReducer = (state = defaultState, action) => {\n  if (action.type === 'CLEAR_ALL') {\n    state = [];\n    return state;\n  }\n\n  return state;\n};\n\nconst clearBtnReducer = (state = defaultState, action) => {\n  if (action.type === 'CLEAR_ONE') {\n    state = action.message;\n    return state;\n  }\n\n  return state;\n};\n\nexport default combineReducers({\n  messageProcess: messageReducer,\n  messagesClearance: clearAllBtnReducer,\n  messageErase: clearBtnReducer //anotherKey: anotherReducer //all your reducers should be combined\n\n});","map":{"version":3,"sources":["/Users/mac/Workspaces/cpsc436assignment2/src/reducers/index.js"],"names":["combineReducers","defaultState","fromname","toname","category","textcontent","date","Date","messageReducer","state","action","type","message","slice","index","concat","clearAllBtnReducer","clearBtnReducer","messageProcess","messagesClearance","messageErase"],"mappings":"AAAA,SAASA,eAAT,QAAgC,OAAhC;AACA,MAAMC,YAAY,GAAG,CAAC;AACrBC,EAAAA,QAAQ,EAAE,EADW;AAErBC,EAAAA,MAAM,EAAE,EAFa;AAGrBC,EAAAA,QAAQ,EAAG,GAHU;AAIrBC,EAAAA,WAAW,EAAG,EAJO;AAKrBC,EAAAA,IAAI,EAAG,IAAIC,IAAJ;AALc,CAAD,CAArB;;AAOA,MAAMC,cAAc,GAAG,CAACC,KAAK,GAAGR,YAAT,EAAuBS,MAAvB,KAAkC;AACxD,UAAOA,MAAM,CAACC,IAAd;AACC,SAAK,aAAL;AACC,aAAO,CAAC,GAAGF,KAAJ,EAAUC,MAAM,CAACE,OAAjB,CAAP;;AACD,SAAK,WAAL;AACC,aAAO,EAAP;;AACD,SAAK,WAAL;AACC,aAAOH,KAAK,CAACI,KAAN,CAAY,CAAZ,EAAcH,MAAM,CAACI,KAArB,EAA4BC,MAA5B,CAAmCN,KAAK,CAACI,KAAN,CAAYH,MAAM,CAACI,KAAP,GAAa,CAAzB,CAAnC,CAAP;AANF;;AAQA,MAAIJ,MAAM,CAACC,IAAP,KAAgB,aAApB,EAAmC,CAElC;;AACD,SAAOF,KAAP;AACA,CAbD;;AAcA,MAAMO,kBAAkB,GAAG,CAACP,KAAK,GAAGR,YAAT,EAAuBS,MAAvB,KAAkC;AAC5D,MAAIA,MAAM,CAACC,IAAP,KAAgB,WAApB,EAAiC;AAChCF,IAAAA,KAAK,GAAG,EAAR;AACA,WAAOA,KAAP;AACA;;AACD,SAAOA,KAAP;AACA,CAND;;AAOA,MAAMQ,eAAe,GAAG,CAACR,KAAK,GAAGR,YAAT,EAAuBS,MAAvB,KAAkC;AACzD,MAAIA,MAAM,CAACC,IAAP,KAAgB,WAApB,EAAiC;AAChCF,IAAAA,KAAK,GAAGC,MAAM,CAACE,OAAf;AACA,WAAOH,KAAP;AACA;;AACD,SAAOA,KAAP;AACA,CAND;;AAOA,eAAeT,eAAe,CAAC;AAC9BkB,EAAAA,cAAc,EAAEV,cADc;AAE9BW,EAAAA,iBAAiB,EAAEH,kBAFW;AAG9BI,EAAAA,YAAY,EAAEH,eAHgB,CAI3B;;AAJ2B,CAAD,CAA9B","sourcesContent":["import { combineReducers } from 'redux';\nconst defaultState = [{\n\tfromname: '',\n\ttoname: '',\n\tcategory : 'A',\n\ttextcontent : '',\n\tdate : new Date()\n}];\nconst messageReducer = (state = defaultState, action) => {\n\tswitch(action.type){\n\t\tcase 'GEN_MESSAGE' :\n\t\t\treturn [...state,action.message];\n\t\tcase 'CLEAR_ALL':\n\t\t\treturn [];\n\t\tcase 'CLEAR_ONE':\n\t\t\treturn state.slice(0,action.index).concat(state.slice(action.index+1))\n\t}\n\tif (action.type === 'GEN_MESSAGE') {\n\t\t\n\t}\n\treturn state;\n};\nconst clearAllBtnReducer = (state = defaultState, action) => {\n\tif (action.type === 'CLEAR_ALL') {\n\t\tstate = [];\n\t\treturn state;\n\t}\n\treturn state;\n};\nconst clearBtnReducer = (state = defaultState, action) => {\n\tif (action.type === 'CLEAR_ONE') {\n\t\tstate = action.message;\n\t\treturn state;\n\t}\n\treturn state;\n};\nexport default combineReducers({ \n\tmessageProcess: messageReducer,\n\tmessagesClearance: clearAllBtnReducer,\n\tmessageErase: clearBtnReducer\n    //anotherKey: anotherReducer //all your reducers should be combined\n});\n"]},"metadata":{},"sourceType":"module"}