{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Workspaces/cpsc436assignment2/client/src/components/PopUp.js\";\nimport React from 'react';\nimport './style.css';\nimport { connect } from 'react-redux';\nimport { closePopedMessage } from '../actions/popUpActions';\n\nclass Popup extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.changeEditMode = field => {\n      var jsonVariable = {};\n      jsonVariable[field] = true;\n      const newState = Object.assign({}, this.state, jsonVariable);\n      this.setState(newState);\n    };\n\n    this.renderMessage = () => {\n      return React.createElement(\"div\", {\n        className: \"popup_inner\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      }, this.state.fromEditMode, \" ? \", React.createElement(\"input\", {\n        type: \"text\",\n        defaultValue: this.props.message.fromname,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }), \" :\", React.createElement(\"div\", {\n        onDoubleClick: this.changeEditMode('fromEditMode'),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }, \"from : \", this.props.message.fromname), this.state.toEditMode, \" ? \", React.createElement(\"input\", {\n        type: \"text\",\n        defaultValue: this.props.message.toname,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }), \" :\", React.createElement(\"div\", {\n        onDoubleClick: this.changeEditMode('toEditMode'),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }, \"to : \", this.props.message.toname), this.state.catEditMode, \" ? \", React.createElement(\"input\", {\n        type: \"text\",\n        defaultValue: this.props.message.fromname,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }), \" :\", React.createElement(\"div\", {\n        onDoubleClick: this.changeEditMode('catEditMode'),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, \"category: \", this.props.message.category), this.state.contentEditMode, \" ? \", React.createElement(\"input\", {\n        type: \"text\",\n        defaultValue: this.props.message.fromname,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }), \" :\", React.createElement(\"div\", {\n        onDoubleClick: this.changeEditMode('contentEditMode'),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, \"content: \", this.props.message.textcontent), this.state.dateEditMode, \" ? \", React.createElement(\"input\", {\n        type: \"text\",\n        defaultValue: this.props.message.fromname,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }), \" :\", React.createElement(\"div\", {\n        onDoubleClick: this.changeEditMode('dateEditMode'),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, \"date: \", this.props.message.date.toString()));\n    };\n\n    this.state = {\n      fromEditMode: false,\n      toEditMode: false,\n      catEditMode: false,\n      contentEditMode: false,\n      dateEditMode: false\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"popup\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, this.renderMessage(), React.createElement(\"button\", {\n      type: \"close\",\n      onClick: this.props.closePopedMessage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, \"Cancel/Close\"), React.createElement(\"button\", {\n      type: \"edit\",\n      onClick: this.props,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, \"save change\"));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    message: state.fetchReducers.popUpMessage\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    closePopedMessage: () => {\n      dispatch(closePopedMessage());\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Popup);","map":{"version":3,"sources":["/Users/mac/Workspaces/cpsc436assignment2/client/src/components/PopUp.js"],"names":["React","connect","closePopedMessage","Popup","Component","constructor","props","changeEditMode","field","jsonVariable","newState","Object","assign","state","setState","renderMessage","fromEditMode","message","fromname","toEditMode","toname","catEditMode","category","contentEditMode","textcontent","dateEditMode","date","toString","render","mapStateToProps","fetchReducers","popUpMessage","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './style.css'\nimport { connect } from 'react-redux';\nimport { closePopedMessage } from '../actions/popUpActions';\n\n\nclass Popup extends React.ComponentÂ {\n    constructor(props) {\n        super(props);\n        this.state = {\n          fromEditMode: false,\n          toEditMode: false,\n          catEditMode: false,\n          contentEditMode: false,\n          dateEditMode: false,\n        };\n    }\n    \n    changeEditMode = (field) => {\n      var jsonVariable = {};\n      jsonVariable[field] = true;\n      const newState = Object.assign({}, this.state, jsonVariable);\n      this.setState(newState);\n    }\n\n    renderMessage = () => {\n      return (\n                <div className='popup_inner' >\n                  {this.state.fromEditMode} ? <input type = 'text' defaultValue = {this.props.message.fromname}/> :\n                      <div onDoubleClick = {this.changeEditMode('fromEditMode')}>from : {this.props.message.fromname}</div>\n                  \n                  {this.state.toEditMode} ? <input type = 'text' defaultValue = {this.props.message.toname}/> :\n                      <div onDoubleClick = {this.changeEditMode('toEditMode')}>to : {this.props.message.toname}</div>\n                  \n                  {this.state.catEditMode} ? <input type = 'text' defaultValue = {this.props.message.fromname}/> :\n                      <div onDoubleClick = {this.changeEditMode('catEditMode')}>category: {this.props.message.category}</div>\n\n                  {this.state.contentEditMode} ? <input type = 'text' defaultValue = {this.props.message.fromname}/> :\n                      <div onDoubleClick = {this.changeEditMode('contentEditMode')}>content: {this.props.message.textcontent}</div>\n                  \n                  {this.state.dateEditMode} ? <input type = 'text' defaultValue = {this.props.message.fromname}/> :\n                      <div onDoubleClick = {this.changeEditMode('dateEditMode')}>date: {this.props.message.date.toString()}</div>\n                </div>\n              );\n    }\n\n    render() {\n      return (\n        <div className='popup'>\n            {this.renderMessage()}\n            <button type = 'close' onClick={this.props.closePopedMessage}>Cancel/Close</button>\n            <button type = 'edit' onClick={this.props}>save change</button>\n        </div>\n      );\n    }\n}\nconst mapStateToProps = (state) => {\n    return { \n        message: state.fetchReducers.popUpMessage\n    };\n}\nconst mapDispatchToProps = (dispatch) => {\n    return {\n      closePopedMessage: () => {\n        dispatch(closePopedMessage());\n      }\n    }\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(Popup);\n\n\n"]},"metadata":{},"sourceType":"module"}