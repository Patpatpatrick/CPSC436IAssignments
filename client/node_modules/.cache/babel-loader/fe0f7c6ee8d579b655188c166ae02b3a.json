{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Workspaces/cpsc436assignment2/client/src/components/MessageBox.js\";\nimport React from 'react';\nimport './style.css';\nimport ClearOne from './ClearOne';\nimport SeeOne from './ViewOneMessage';\nimport { connect } from 'react-redux';\nimport { doneFetching, fetchData } from '../actions/fetchActions';\n\nclass MessageBox extends React.Component {\n  componentDidMount() {\n    console.log(this.props.shouldRetrive);\n    if (this.props.shouldRetrive) this.props.fetchInitial('http://localhost:3001/getMessages');\n  }\n\n  componentDidUpdate() {\n    this.props.doneFetching();\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {}\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"messages\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }, React.createElement(\"table\", {\n      id: \"messagetable\",\n      style: {\n        \"wordWrap\": \"break-word\",\n        \"wordBreak\": \"break-all\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      id: \"messagetableHeader\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      style: {\n        width: '50px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, \"From\"), React.createElement(\"th\", {\n      style: {\n        width: '50px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, \"To\"), React.createElement(\"th\", {\n      style: {\n        width: '50px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, \"Category\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, \"Content\"), React.createElement(\"th\", {\n      style: {\n        width: '190px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, \"Added Date\"), React.createElement(\"th\", {\n      style: {\n        width: '20px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, \"Operation\")), this.props.messageArray.map((message, idx) => {\n      return React.createElement(\"tr\", {\n        id: 'messageIndex' + idx,\n        key: 'messageIndex' + idx,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, message.fromname), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, message.toname), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, message.category), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, message.textcontent), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, message.date.toString()), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, React.createElement(ClearOne, {\n        index: idx,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }), React.createElement(SeeOne, {\n        index: idx,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      })));\n    }))));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    messageArray: state.fetchReducers.messageArray,\n    shouldRetrive: state.postReducers.stillNeedToFetch\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchInitial: url => {\n      dispatch(fetchData(url));\n    },\n    doneFetching: () => {\n      dispatch(doneFetching());\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MessageBox);","map":{"version":3,"sources":["/Users/mac/Workspaces/cpsc436assignment2/client/src/components/MessageBox.js"],"names":["React","ClearOne","SeeOne","connect","doneFetching","fetchData","MessageBox","Component","componentDidMount","console","log","props","shouldRetrive","fetchInitial","componentDidUpdate","shouldComponentUpdate","nextProps","nextState","render","width","messageArray","map","message","idx","fromname","toname","category","textcontent","date","toString","mapStateToProps","state","fetchReducers","postReducers","stillNeedToFetch","mapDispatchToProps","dispatch","url"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './style.css'\nimport ClearOne from './ClearOne';\nimport SeeOne from './ViewOneMessage';\nimport { connect } from 'react-redux';\nimport { doneFetching,fetchData }  from '../actions/fetchActions';\n\nclass MessageBox extends React.Component { \n    componentDidMount(){\n        console.log(this.props.shouldRetrive);\n        if(this.props.shouldRetrive)\n            this.props.fetchInitial('http://localhost:3001/getMessages');\n    }\n    componentDidUpdate(){\n        this.props.doneFetching();\n    }\n    shouldComponentUpdate(nextProps, nextState){\n        \n    }\n \n\trender() {\n        return (\n            <div className=\"messages\">\n                <table id = \"messagetable\" style={{\"wordWrap\":\"break-word\",\"wordBreak\":\"break-all\"}}>\n                    <tbody>\n                        <tr id = \"messagetableHeader\">\n                            <th style={{width: '50px'}}>From</th>\n                            <th style={{width: '50px'}}>To</th>\n                            <th style={{width: '50px'}}>Category</th>\n                            <th>Content</th>\n                            <th style={{width: '190px'}} >Added Date</th>\n                            <th style={{width: '20px'}}>Operation</th>\n                        </tr>\n                        {this.props.messageArray.map( (message, idx) => {\n                            return (\n                                <tr id = {'messageIndex' + idx} key = {'messageIndex' + idx}>\n                                    <td>{message.fromname}</td>\n                                    <td>{message.toname}</td>\n                                    <td>{message.category}</td>\n                                    <td>{message.textcontent}</td>\n                                    <td>{message.date.toString()}</td>\n                                    <td><ClearOne index = {idx}/><SeeOne index = {idx}/></td>\n                                </tr>\n                            )\n                            })\n                        }\n                    </tbody>\n                </table>\n            </div>\n        );\n    }\n}\nconst mapStateToProps = (state) => {\n    return { \n        messageArray: state.fetchReducers.messageArray,\n        shouldRetrive: state.postReducers.stillNeedToFetch\n    };\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n      fetchInitial: (url) => {\n        dispatch(fetchData(url));\n      },\n      doneFetching: () =>{\n          dispatch(doneFetching());\n      }\n    }\n};\n\nexport default connect(mapStateToProps,mapDispatchToProps)(MessageBox);"]},"metadata":{},"sourceType":"module"}