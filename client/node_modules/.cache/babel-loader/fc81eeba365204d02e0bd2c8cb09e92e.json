{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Workspaces/cpsc436assignment2/client/src/components/PopUp.js\";\nimport React from 'react';\nimport './style.css';\nimport { connect } from 'react-redux';\nimport { closePopedMessage } from '../actions/popUpActions';\n\nclass Popup extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.renderMessage = () => {\n      return React.createElement(\"div\", {\n        className: \"popup_inner\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 11\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"fname\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 12\n        },\n        __self: this\n      }, \"From\"), React.createElement(\"input\", {\n        type: \"text\",\n        defaultValue: this.props.message.fromname,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 13\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        htmlFor: \"lname\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 14\n        },\n        __self: this\n      }, \"To\"), React.createElement(\"input\", {\n        type: \"text\",\n        defaultValue: this.props.message.toname,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 15\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        type: \"text\",\n        defaultValue: this.props.message.category,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        type: \"text\",\n        defaultValue: this.props.message.textcontent,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        type: \"text\",\n        defaultValue: this.props.message.date.toString(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        type: \"close\",\n        onClick: this.props.closePopedMessage,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      }, \"Cancel/Close\"), React.createElement(\"button\", {\n        type: \"edit\",\n        onClick: this.props.uploadChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      }, \"save change\"));\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"popup\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, this.renderMessage());\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    message: state.fetchReducers.popUpMessage\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    closePopedMessage: () => {\n      dispatch(closePopedMessage());\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Popup);","map":{"version":3,"sources":["/Users/mac/Workspaces/cpsc436assignment2/client/src/components/PopUp.js"],"names":["React","connect","closePopedMessage","Popup","Component","renderMessage","props","message","fromname","toname","category","textcontent","date","toString","uploadChange","render","mapStateToProps","state","fetchReducers","popUpMessage","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,aAAP;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,iBAAT,QAAkC,yBAAlC;;AAGA,MAAMC,KAAN,SAAoBH,KAAK,CAACI,SAA1B,CAAoC;AAAA;AAAA;;AAAA,SAEhCC,aAFgC,GAEhB,MAAM;AACpB,aACU;AAAK,QAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAO,QAAA,OAAO,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EAEE;AAAO,QAAA,IAAI,EAAG,MAAd;AAAqB,QAAA,YAAY,EAAI,KAAKC,KAAL,CAAWC,OAAX,CAAmBC,QAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,EAGE;AAAO,QAAA,OAAO,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF,EAIE;AAAO,QAAA,IAAI,EAAG,MAAd;AAAqB,QAAA,YAAY,EAAI,KAAKF,KAAL,CAAWC,OAAX,CAAmBE,MAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJF,EAME;AAAO,QAAA,IAAI,EAAG,MAAd;AAAqB,QAAA,YAAY,EAAI,KAAKH,KAAL,CAAWC,OAAX,CAAmBG,QAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QANF,EAQE;AAAO,QAAA,IAAI,EAAG,MAAd;AAAqB,QAAA,YAAY,EAAI,KAAKJ,KAAL,CAAWC,OAAX,CAAmBI,WAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QARF,EAUE;AAAO,QAAA,IAAI,EAAG,MAAd;AAAqB,QAAA,YAAY,EAAI,KAAKL,KAAL,CAAWC,OAAX,CAAmBK,IAAnB,CAAwBC,QAAxB,EAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAVF,EAYE;AAAQ,QAAA,IAAI,EAAG,OAAf;AAAuB,QAAA,OAAO,EAAE,KAAKP,KAAL,CAAWJ,iBAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAZF,EAaE;AAAQ,QAAA,IAAI,EAAG,MAAf;AAAsB,QAAA,OAAO,EAAE,KAAKI,KAAL,CAAWQ,YAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAbF,CADV;AAiBD,KApB+B;AAAA;;AAsBhCC,EAAAA,MAAM,GAAG;AACP,WACE;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKV,aAAL,EADL,CADF;AAMD;;AA7B+B;;AA+BpC,MAAMW,eAAe,GAAIC,KAAD,IAAW;AAC/B,SAAO;AACHV,IAAAA,OAAO,EAAEU,KAAK,CAACC,aAAN,CAAoBC;AAD1B,GAAP;AAGH,CAJD;;AAKA,MAAMC,kBAAkB,GAAIC,QAAD,IAAc;AACrC,SAAO;AACLnB,IAAAA,iBAAiB,EAAE,MAAM;AACvBmB,MAAAA,QAAQ,CAACnB,iBAAiB,EAAlB,CAAR;AACD;AAHI,GAAP;AAKH,CAND;;AAOA,eAAeD,OAAO,CAACe,eAAD,EAAkBI,kBAAlB,CAAP,CAA6CjB,KAA7C,CAAf","sourcesContent":["import React from 'react';\nimport './style.css'\nimport { connect } from 'react-redux';\nimport { closePopedMessage } from '../actions/popUpActions';\n\n\nclass Popup extends React.ComponentÂ {\n\n    renderMessage = () => {\n      return (\n                <div className='popup_inner' >\n                  <label htmlFor=\"fname\">From</label>\n                  <input type = 'text' defaultValue = {this.props.message.fromname}/>\n                  <label htmlFor=\"lname\">To</label>\n                  <input type = 'text' defaultValue = {this.props.message.toname}/>\n                  \n                  <input type = 'text' defaultValue = {this.props.message.category}/>\n\n                  <input type = 'text' defaultValue = {this.props.message.textcontent}/>\n                  \n                  <input type = 'text' defaultValue = {this.props.message.date.toString()}/>\n\n                  <button type = 'close' onClick={this.props.closePopedMessage}>Cancel/Close</button>\n                  <button type = 'edit' onClick={this.props.uploadChange}>save change</button>\n                </div>\n              );\n    }\n\n    render() {\n      return (\n        <div className='popup'>\n            {this.renderMessage()}\n            \n        </div>\n      );\n    }\n}\nconst mapStateToProps = (state) => {\n    return { \n        message: state.fetchReducers.popUpMessage\n    };\n}\nconst mapDispatchToProps = (dispatch) => {\n    return {\n      closePopedMessage: () => {\n        dispatch(closePopedMessage());\n      }\n    }\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(Popup);\n\n\n"]},"metadata":{},"sourceType":"module"}