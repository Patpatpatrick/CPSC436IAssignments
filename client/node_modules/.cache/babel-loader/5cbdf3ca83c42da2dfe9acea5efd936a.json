{"ast":null,"code":"import { combineReducers } from 'redux';\nconst defaultState = {\n  count: 1,\n  messageArray: [{\n    fromname: 'LGY',\n    toname: 'YGL',\n    category: 'A',\n    textcontent: 'Hello!',\n    date: new Date()\n  }]\n};\n\nconst messageReducer = (state = defaultState, action) => {\n  switch (action.type) {\n    case 'GEN_MESSAGE':\n      return {\n        count: state.count + 1,\n        messageArray: [...state.messageArray, action.message]\n      };\n\n    case 'CLEAR_ALL':\n      console.log(state);\n      return {\n        count: state.count + 1,\n        messageArray: []\n      };\n\n    case 'CLEAR_ONE':\n      return state.slice(0, action.toDelIndex).concat(state.slice(action.toDelIndex + 1));\n\n    default:\n      return state;\n  }\n};\n\nexport default combineReducers({\n  messageProcess: messageReducer //anotherKey: anotherReducer //all your reducers should be combined\n\n});","map":{"version":3,"sources":["/Users/mac/Workspaces/cpsc436assignment2/src/reducers/index.js"],"names":["combineReducers","defaultState","count","messageArray","fromname","toname","category","textcontent","date","Date","messageReducer","state","action","type","message","console","log","slice","toDelIndex","concat","messageProcess"],"mappings":"AAAA,SAASA,eAAT,QAAgC,OAAhC;AACA,MAAMC,YAAY,GAAG;AACpBC,EAAAA,KAAK,EAAG,CADY;AAEpBC,EAAAA,YAAY,EAAG,CAAC;AACfC,IAAAA,QAAQ,EAAE,KADK;AAEfC,IAAAA,MAAM,EAAE,KAFO;AAGfC,IAAAA,QAAQ,EAAG,GAHI;AAIfC,IAAAA,WAAW,EAAG,QAJC;AAKfC,IAAAA,IAAI,EAAG,IAAIC,IAAJ;AALQ,GAAD;AAFK,CAArB;;AAUA,MAAMC,cAAc,GAAG,CAACC,KAAK,GAAGV,YAAT,EAAuBW,MAAvB,KAAkC;AACxD,UAAOA,MAAM,CAACC,IAAd;AACC,SAAK,aAAL;AACC,aAAO;AACNX,QAAAA,KAAK,EAAGS,KAAK,CAACT,KAAN,GAAc,CADhB;AAENC,QAAAA,YAAY,EAAE,CAAC,GAAGQ,KAAK,CAACR,YAAV,EAAuBS,MAAM,CAACE,OAA9B;AAFR,OAAP;;AAID,SAAK,WAAL;AACCC,MAAAA,OAAO,CAACC,GAAR,CAAYL,KAAZ;AACA,aAAO;AACNT,QAAAA,KAAK,EAAGS,KAAK,CAACT,KAAN,GAAc,CADhB;AAENC,QAAAA,YAAY,EAAE;AAFR,OAAP;;AAID,SAAK,WAAL;AACC,aAAOQ,KAAK,CAACM,KAAN,CAAY,CAAZ,EAAcL,MAAM,CAACM,UAArB,EAAiCC,MAAjC,CAAwCR,KAAK,CAACM,KAAN,CAAYL,MAAM,CAACM,UAAP,GAAkB,CAA9B,CAAxC,CAAP;;AACD;AACC,aAAOP,KAAP;AAfF;AAiBA,CAlBD;;AAoBA,eAAeX,eAAe,CAAC;AAC9BoB,EAAAA,cAAc,EAAEV,cADc,CAE3B;;AAF2B,CAAD,CAA9B","sourcesContent":["import { combineReducers } from 'redux';\nconst defaultState = {\n\tcount : 1,\n\tmessageArray : [{\n\t\tfromname: 'LGY',\n\t\ttoname: 'YGL',\n\t\tcategory : 'A',\n\t\ttextcontent : 'Hello!',\n\t\tdate : new Date()\n\t}]\n};\nconst messageReducer = (state = defaultState, action) => {\n\tswitch(action.type){\n\t\tcase 'GEN_MESSAGE' :\n\t\t\treturn {\n\t\t\t\tcount : state.count + 1,\n\t\t\t\tmessageArray: [...state.messageArray,action.message]\n\t\t\t};\n\t\tcase 'CLEAR_ALL':\n\t\t\tconsole.log(state);\n\t\t\treturn {\n\t\t\t\tcount : state.count + 1,\n\t\t\t\tmessageArray: []\n\t\t\t};\n\t\tcase 'CLEAR_ONE':\n\t\t\treturn state.slice(0,action.toDelIndex).concat(state.slice(action.toDelIndex+1));\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};\n\nexport default combineReducers({ \n\tmessageProcess: messageReducer,\n    //anotherKey: anotherReducer //all your reducers should be combined\n});\n"]},"metadata":{},"sourceType":"module"}