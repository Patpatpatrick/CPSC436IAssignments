{"ast":null,"code":"export const POST_HAS_ERRORED = 'POST_HAS_ERRORED';\nexport const FORM_IS_POSTING = 'FORM_IS_POSTING';\nexport const POST_DATA_SUCCESS = 'POST_DATA_SUCCESS';\nexport const RESET = 'RESET';\nexport const hasErrored = bool => {\n  return {\n    type: POST_HAS_ERRORED,\n    hasErrored: bool\n  };\n};\nexport const isPosting = bool => {\n  return {\n    type: FORM_IS_POSTING,\n    isPosting: bool\n  };\n};\nexport const uploadData = (url, data, meth) => {\n  console.log('uploadData' + method);\n  return dispatch => {\n    dispatch(isPosting(true));\n    fetch(url, {\n      method: method,\n      mode: 'cors',\n      body: JSON.stringify(data),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(response => {\n      if (!response.ok) {\n        throw Error(response.statusText);\n      }\n\n      dispatch(isPosting(false));\n      return response;\n    }).then(response => response.json()).then(success => {\n      alert(success.status);\n      dispatch(postDataSuccess());\n    }).catch(() => dispatch(hasErrored(true)));\n  };\n};\nexport const postDataSuccess = () => {\n  return {\n    type: POST_DATA_SUCCESS\n  };\n};\nexport const reset = () => {\n  return {\n    type: RESET\n  };\n};","map":{"version":3,"sources":["/Users/mac/Workspaces/cpsc436assignment2/client/src/actions/postActions.js"],"names":["POST_HAS_ERRORED","FORM_IS_POSTING","POST_DATA_SUCCESS","RESET","hasErrored","bool","type","isPosting","uploadData","url","data","meth","console","log","method","dispatch","fetch","mode","body","JSON","stringify","headers","then","response","ok","Error","statusText","json","success","alert","status","postDataSuccess","catch","reset"],"mappings":"AAAA,OAAO,MAAMA,gBAAgB,GAAG,kBAAzB;AACP,OAAO,MAAMC,eAAe,GAAG,iBAAxB;AACP,OAAO,MAAMC,iBAAiB,GAAG,mBAA1B;AACP,OAAO,MAAMC,KAAK,GAAG,OAAd;AAEP,OAAO,MAAMC,UAAU,GAAIC,IAAD,IAAU;AAChC,SAAO;AACHC,IAAAA,IAAI,EAAEN,gBADH;AAEHI,IAAAA,UAAU,EAAEC;AAFT,GAAP;AAIH,CALM;AAOP,OAAO,MAAME,SAAS,GAAIF,IAAD,IAAU;AAC/B,SAAO;AACHC,IAAAA,IAAI,EAAEL,eADH;AAEHM,IAAAA,SAAS,EAAEF;AAFR,GAAP;AAIH,CALM;AAOP,OAAO,MAAMG,UAAU,GAAG,CAACC,GAAD,EAAKC,IAAL,EAAUC,IAAV,KAAmB;AACzCC,EAAAA,OAAO,CAACC,GAAR,CAAY,eAAeC,MAA3B;AACA,SAAQC,QAAD,IAAc;AACjBA,IAAAA,QAAQ,CAACR,SAAS,CAAC,IAAD,CAAV,CAAR;AACAS,IAAAA,KAAK,CAACP,GAAD,EAAM;AACPK,MAAAA,MAAM,EAAEA,MADD;AAEPG,MAAAA,IAAI,EAAE,MAFC;AAGPC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeV,IAAf,CAHC;AAIPW,MAAAA,OAAO,EAAE;AAAC,wBAAgB;AAAjB;AAJF,KAAN,CAAL,CAMKC,IANL,CAMWC,QAAD,IAAc;AAChB,UAAI,CAACA,QAAQ,CAACC,EAAd,EAAkB;AACd,cAAMC,KAAK,CAACF,QAAQ,CAACG,UAAV,CAAX;AACH;;AACDX,MAAAA,QAAQ,CAACR,SAAS,CAAC,KAAD,CAAV,CAAR;AACA,aAAOgB,QAAP;AACH,KAZL,EAaKD,IAbL,CAaUC,QAAQ,IAAIA,QAAQ,CAACI,IAAT,EAbtB,EAcKL,IAdL,CAcWM,OAAD,IAAa;AACfC,MAAAA,KAAK,CAACD,OAAO,CAACE,MAAT,CAAL;AACAf,MAAAA,QAAQ,CAACgB,eAAe,EAAhB,CAAR;AACH,KAjBL,EAkBKC,KAlBL,CAkBW,MAAMjB,QAAQ,CAACX,UAAU,CAAC,IAAD,CAAX,CAlBzB;AAmBH,GArBD;AAsBH,CAxBM;AA0BP,OAAO,MAAM2B,eAAe,GAAG,MAAM;AACjC,SAAO;AACHzB,IAAAA,IAAI,EAAEJ;AADH,GAAP;AAGH,CAJM;AAMP,OAAO,MAAM+B,KAAK,GAAG,MAAM;AACvB,SAAO;AACH3B,IAAAA,IAAI,EAAEH;AADH,GAAP;AAGH,CAJM","sourcesContent":["export const POST_HAS_ERRORED = 'POST_HAS_ERRORED'\nexport const FORM_IS_POSTING = 'FORM_IS_POSTING'\nexport const POST_DATA_SUCCESS = 'POST_DATA_SUCCESS'\nexport const RESET = 'RESET'\n\nexport const hasErrored = (bool) => {\n    return {\n        type: POST_HAS_ERRORED,\n        hasErrored: bool\n    };\n}\n\nexport const isPosting = (bool) => {\n    return {\n        type: FORM_IS_POSTING,\n        isPosting: bool\n    };\n}\n\nexport const uploadData = (url,data,meth) => {\n    console.log('uploadData' + method);\n    return (dispatch) => {\n        dispatch(isPosting(true));\n        fetch(url, {\n            method: method,\n            mode: 'cors',\n            body: JSON.stringify(data),\n            headers: {'Content-Type': 'application/json'}\n          })\n            .then((response) => {\n                if (!response.ok) {\n                    throw Error(response.statusText);\n                }\n                dispatch(isPosting(false));\n                return response;\n            })\n            .then(response => response.json())\n            .then((success) => {\n                alert(success.status);\n                dispatch(postDataSuccess());\n            })\n            .catch(() => dispatch(hasErrored(true)));\n    };\n}\n\nexport const postDataSuccess = () => {\n    return {\n        type: POST_DATA_SUCCESS,\n    };\n}\n\nexport const reset = () => {\n    return {\n        type: RESET,\n    };\n}"]},"metadata":{},"sourceType":"module"}