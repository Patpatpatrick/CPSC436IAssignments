{"ast":null,"code":"import { combineReducers } from 'redux';\nconst defaultState = [{\n  fromname: 'LGY',\n  toname: 'YGL',\n  category: 'A',\n  textcontent: 'Hello!',\n  date: new Date()\n}];\n\nconst messageReducer = (state = defaultState, action) => {\n  switch (action.type) {\n    case 'GEN_MESSAGE':\n      console.log();\n      console.log([...state, action.message]);\n      return [...state, action.message];\n\n    case 'CLEAR_ALL':\n      return [];\n\n    case 'CLEAR_ONE':\n      return state.slice(0, action.toDelIndex).concat(state.slice(action.toDelIndex + 1));\n\n    default:\n      return state;\n  }\n};\n\nexport default combineReducers({\n  messageProcess: messageReducer //anotherKey: anotherReducer //all your reducers should be combined\n\n});","map":{"version":3,"sources":["/Users/mac/Workspaces/cpsc436assignment2/src/reducers/index.js"],"names":["combineReducers","defaultState","fromname","toname","category","textcontent","date","Date","messageReducer","state","action","type","console","log","message","slice","toDelIndex","concat","messageProcess"],"mappings":"AAAA,SAASA,eAAT,QAAgC,OAAhC;AACA,MAAMC,YAAY,GAAG,CAAC;AACrBC,EAAAA,QAAQ,EAAE,KADW;AAErBC,EAAAA,MAAM,EAAE,KAFa;AAGrBC,EAAAA,QAAQ,EAAG,GAHU;AAIrBC,EAAAA,WAAW,EAAG,QAJO;AAKrBC,EAAAA,IAAI,EAAG,IAAIC,IAAJ;AALc,CAAD,CAArB;;AAOA,MAAMC,cAAc,GAAG,CAACC,KAAK,GAAGR,YAAT,EAAuBS,MAAvB,KAAkC;AACxD,UAAOA,MAAM,CAACC,IAAd;AACC,SAAK,aAAL;AACEC,MAAAA,OAAO,CAACC,GAAR;AACDD,MAAAA,OAAO,CAACC,GAAR,CAAY,CAAC,GAAGJ,KAAJ,EAAUC,MAAM,CAACI,OAAjB,CAAZ;AACA,aAAO,CAAC,GAAGL,KAAJ,EAAUC,MAAM,CAACI,OAAjB,CAAP;;AACD,SAAK,WAAL;AACC,aAAO,EAAP;;AACD,SAAK,WAAL;AACC,aAAOL,KAAK,CAACM,KAAN,CAAY,CAAZ,EAAcL,MAAM,CAACM,UAArB,EAAiCC,MAAjC,CAAwCR,KAAK,CAACM,KAAN,CAAYL,MAAM,CAACM,UAAP,GAAkB,CAA9B,CAAxC,CAAP;;AACD;AACC,aAAOP,KAAP;AAVF;AAYA,CAbD;;AAeA,eAAeT,eAAe,CAAC;AAC9BkB,EAAAA,cAAc,EAAEV,cADc,CAE3B;;AAF2B,CAAD,CAA9B","sourcesContent":["import { combineReducers } from 'redux';\nconst defaultState = [{\n\tfromname: 'LGY',\n\ttoname: 'YGL',\n\tcategory : 'A',\n\ttextcontent : 'Hello!',\n\tdate : new Date()\n}];\nconst messageReducer = (state = defaultState, action) => {\n\tswitch(action.type){\n\t\tcase 'GEN_MESSAGE' :\n\t\t\t\tconsole.log()\n\t\t\tconsole.log([...state,action.message]);\n\t\t\treturn [...state,action.message];\n\t\tcase 'CLEAR_ALL':\n\t\t\treturn [];\n\t\tcase 'CLEAR_ONE':\n\t\t\treturn state.slice(0,action.toDelIndex).concat(state.slice(action.toDelIndex+1));\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};\n\nexport default combineReducers({ \n\tmessageProcess: messageReducer,\n    //anotherKey: anotherReducer //all your reducers should be combined\n});\n"]},"metadata":{},"sourceType":"module"}