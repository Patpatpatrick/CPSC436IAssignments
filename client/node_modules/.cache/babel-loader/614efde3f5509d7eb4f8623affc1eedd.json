{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Workspaces/cpsc436assignment2/client/src/components/ViewOneMessage.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { fetchSingleItem } from '../actions/fetchActions';\nimport { firePopUP } from '../actions/popUpActions';\nimport './style.css';\nimport Popup from './PopUp';\nimport { BrowserRouter, Route, Link, Switch } from \"react-router-dom\";\n\nclass SeeOne extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleClick() {\n    console.log(this.props.index);\n    this.props.firePopUP();\n    this.props.showIndexMessage('http://localhost:3001/getMessages/' + this.props.index);\n  }\n\n  render() {\n    return React.createElement(BrowserRouter, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    }, \" \", React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }))) // <div>\n    //     <button type=\"view\" onClick = {this.handleClick} id={this.props.index + 'View'}>Edit</button>\n    //     {this.props.toPop && <Popup />}\n    // </div>   \n    ;\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    showIndexMessage: url => {\n      dispatch(fetchSingleItem(url));\n    },\n    firePopUP: () => {\n      dispatch(firePopUP());\n    }\n  };\n};\n\nexport default connect(null, mapDispatchToProps)(SeeOne);","map":{"version":3,"sources":["/Users/mac/Workspaces/cpsc436assignment2/client/src/components/ViewOneMessage.js"],"names":["React","connect","fetchSingleItem","firePopUP","Popup","BrowserRouter","Route","Link","Switch","SeeOne","Component","constructor","props","handleClick","bind","console","log","index","showIndexMessage","render","mapDispatchToProps","dispatch","url"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,eAAT,QAAiC,yBAAjC;AACA,SAASC,SAAT,QAA0B,yBAA1B;AACA,OAAO,aAAP;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,SAASC,aAAT,EAAwBC,KAAxB,EAA+BC,IAA/B,EAAqCC,MAArC,QAAmD,kBAAnD;;AACA,MAAMC,MAAN,SAAqBT,KAAK,CAACU,SAA3B,CAAqC;AACjCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,WAAL,GAAmB,KAAKA,WAAL,CAAiBC,IAAjB,CAAsB,IAAtB,CAAnB;AACH;;AACDD,EAAAA,WAAW,GAAE;AACTE,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKJ,KAAL,CAAWK,KAAvB;AACA,SAAKL,KAAL,CAAWT,SAAX;AACA,SAAKS,KAAL,CAAWM,gBAAX,CAA4B,uCAAuC,KAAKN,KAAL,CAAWK,KAA9E;AACH;;AACJE,EAAAA,MAAM,GAAG;AACF,WACI,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADJ,CADJ,CASI;AACA;AACA;AACA;AAZJ;AAcH;;AAzBgC;;AA4BrC,MAAMC,kBAAkB,GAAIC,QAAD,IAAc;AACrC,SAAO;AACLH,IAAAA,gBAAgB,EAAGI,GAAD,IAAS;AACzBD,MAAAA,QAAQ,CAACnB,eAAe,CAACoB,GAAD,CAAhB,CAAR;AACD,KAHI;AAILnB,IAAAA,SAAS,EAAG,MAAM;AACdkB,MAAAA,QAAQ,CAAClB,SAAS,EAAV,CAAR;AACH;AANI,GAAP;AAQH,CATD;;AAUA,eAAeF,OAAO,CAAC,IAAD,EAAOmB,kBAAP,CAAP,CAAkCX,MAAlC,CAAf","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport { fetchSingleItem }  from '../actions/fetchActions';\nimport { firePopUP } from '../actions/popUpActions';\nimport './style.css'\nimport Popup from './PopUp'\nimport { BrowserRouter, Route, Link, Switch } from \"react-router-dom\";\nclass SeeOne extends React.Component {\n    constructor(props) {\n        super(props);\n        this.handleClick = this.handleClick.bind(this);\n    }\n    handleClick(){\n        console.log(this.props.index);\n        this.props.firePopUP();\n        this.props.showIndexMessage('http://localhost:3001/getMessages/' + this.props.index);\n    }\n\trender() {\n        return (\n            <BrowserRouter> {/* browserRouter is a router component Generally speaking, you should use a <BrowserRouter> if you have a server that responds to requests and a <HashRouter> if you are using a static file server.*/}\n                <div>\n                    <button>\n\n                    </button>\n                    \n                </div>\n            </BrowserRouter>\n            // <div>\n            //     <button type=\"view\" onClick = {this.handleClick} id={this.props.index + 'View'}>Edit</button>\n            //     {this.props.toPop && <Popup />}\n            // </div>   \n        );\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n      showIndexMessage: (url) => {\n        dispatch(fetchSingleItem(url));\n      },\n      firePopUP : () => {\n          dispatch(firePopUP());\n      }\n    }\n};\nexport default connect(null, mapDispatchToProps)(SeeOne);"]},"metadata":{},"sourceType":"module"}