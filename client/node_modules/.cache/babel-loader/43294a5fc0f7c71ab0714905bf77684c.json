{"ast":null,"code":"import { combineReducers } from 'redux';\n\nconst counterReducer = (count = 0, action) => {\n  if (action.type === 'INCREMENT_COUNTER') {\n    return count + action.payload;\n  }\n\n  return count;\n};\n\nexport default combineReducers({\n  count: counterReducer //anotherKey: anotherReducer //all your reducers should be combined\n\n});","map":{"version":3,"sources":["/Users/mac/Workspaces/cpsc436assignment2/src/reducers/index.js"],"names":["combineReducers","counterReducer","count","action","type","payload"],"mappings":"AAAA,SAASA,eAAT,QAAgC,OAAhC;;AACA,MAAMC,cAAc,GAAG,CAACC,KAAK,GAAG,CAAT,EAAYC,MAAZ,KAAuB;AAC7C,MAAIA,MAAM,CAACC,IAAP,KAAgB,mBAApB,EAAyC;AACxC,WAAOF,KAAK,GAAGC,MAAM,CAACE,OAAtB;AACA;;AACD,SAAOH,KAAP;AACA,CALD;;AAMA,eAAeF,eAAe,CAAC;AAC9BE,EAAAA,KAAK,EAAED,cADuB,CAE3B;;AAF2B,CAAD,CAA9B","sourcesContent":["import { combineReducers } from 'redux';\nconst counterReducer = (count = 0, action) => {\n\tif (action.type === 'INCREMENT_COUNTER') {\n\t\treturn count + action.payload;\n\t}\n\treturn count;\n};\nexport default combineReducers({ \n\tcount: counterReducer,\n    //anotherKey: anotherReducer //all your reducers should be combined\n});\n"]},"metadata":{},"sourceType":"module"}