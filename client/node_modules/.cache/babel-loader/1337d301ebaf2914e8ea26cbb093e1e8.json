{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Workspaces/cpsc436assignment2/client/src/components/PopUp.js\";\nimport React from 'react';\nimport './style.css';\nimport { connect } from 'react-redux';\nimport { closePopedMessage } from '../actions/popUpActions';\nimport { uploadData } from '../actions/postActions';\nimport { changePopedMessage } from '../actions/popUpActions';\n\nclass Popup extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.renderMessage = () => {\n      return React.createElement(\"div\", {\n        className: \"popup_inner\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        onSubmit: this.uploadChange,\n        onChange: this.handleChange,\n        className: \"form\",\n        ref: \"inputform\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"fname\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }, \"From\"), React.createElement(\"input\", {\n        type: \"text\",\n        name: \"fromname\",\n        defaultValue: this.props.message.fromname,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        htmlFor: \"tname\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }, \"To\"), React.createElement(\"input\", {\n        type: \"text\",\n        name: \"toname\",\n        defaultValue: this.props.message.toname,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        htmlFor: \"Category\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, \"Category\"), React.createElement(\"input\", {\n        type: \"text\",\n        name: \"category\",\n        defaultValue: this.props.message.category,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        htmlFor: \"subject\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, \"Content\"), React.createElement(\"textarea\", {\n        id: \"subject\",\n        name: \"textcontent\",\n        placeholder: this.props.message.textcontent,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }), React.createElement(\"center\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        type: \"submit\",\n        value: \"Submit\",\n        id: \"submitEditBtn\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, \"save change\"), \"import \", (BrowserRouter, Route, Link, Switch), \" from \\\"react-router-dom\\\";\", React.createElement(\"button\", {\n        type: \"close\",\n        onClick: this.props.closePopedMessage,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, \"Cancel/Close\"))));\n    };\n\n    this.uploadChange = this.uploadChange.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  uploadChange(event) {\n    event.preventDefault();\n    this.props.updataMessage('http://localhost:3001/changeMessage/' + this.props.idx, this.props.popUpMessage, 'PUT');\n  }\n\n  handleChange(event) {\n    const target = event.target;\n    const value = target.value;\n    const name = target.name;\n    this.props.changePopedMessage(name, value);\n  }\n\n  render() {\n    console.log(this.props.toPop);\n    return React.createElement(\"div\", {\n      className: \"popup\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, this.props.toPop && this.renderMessage());\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    message: state.fetchReducers.popUpMessage,\n    popUpMessage: state.popMessageReducer.popUpMessage,\n    toPop: state.popMessageReducer.popUp\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    closePopedMessage: () => {\n      dispatch(closePopedMessage());\n    },\n    updataMessage: (url, data, method) => {\n      dispatch(uploadData(url, data, method));\n    },\n    changePopedMessage: (name, value) => {\n      dispatch(changePopedMessage(name, value));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Popup);","map":{"version":3,"sources":["/Users/mac/Workspaces/cpsc436assignment2/client/src/components/PopUp.js"],"names":["React","connect","closePopedMessage","uploadData","changePopedMessage","Popup","Component","constructor","props","renderMessage","uploadChange","handleChange","message","fromname","toname","category","textcontent","BrowserRouter","Route","Link","Switch","bind","event","preventDefault","updataMessage","idx","popUpMessage","target","value","name","render","console","log","toPop","mapStateToProps","state","fetchReducers","popMessageReducer","popUp","mapDispatchToProps","dispatch","url","data","method"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './style.css'\nimport { connect } from 'react-redux';\nimport { closePopedMessage } from '../actions/popUpActions';\nimport { uploadData } from '../actions/postActions';\nimport { changePopedMessage } from '../actions/popUpActions';\n\n\nclass Popup extends React.ComponentÂ {\n\n    constructor(props) {\n        super(props);\n        this.uploadChange = this.uploadChange.bind(this);\n        this.handleChange = this.handleChange.bind(this);\n    }\n    uploadChange (event) {\n      event.preventDefault();\n      this.props.updataMessage('http://localhost:3001/changeMessage/' + this.props.idx, this.props.popUpMessage,'PUT');\n    }\n    handleChange (event) {\n        const target = event.target;\n        const value = target.value;\n        const name = target.name;\n        this.props.changePopedMessage(name,value);\n    }\n    renderMessage = () => {\n      return (\n                <div className='popup_inner' >\n                  <form onSubmit={this.uploadChange} onChange={this.handleChange} className=\"form\" ref = \"inputform\">\n                    <label htmlFor=\"fname\">From</label>\n                    <input type = 'text' name = 'fromname' defaultValue = {this.props.message.fromname}/>\n\n                    <label htmlFor=\"tname\">To</label>\n                    <input type = 'text' name = 'toname' defaultValue = {this.props.message.toname}/>\n\n                    <label htmlFor=\"Category\">Category</label>\n                    <input type = 'text' name = 'category' defaultValue = {this.props.message.category}/>\n\n                    <label htmlFor=\"subject\">Content</label>\n                    <textarea id=\"subject\" name=\"textcontent\" placeholder= {this.props.message.textcontent}></textarea>\n                    <center>\n                        <button type = 'submit' value=\"Submit\" id = \"submitEditBtn\" >save change</button>\n                        import { BrowserRouter, Route, Link, Switch } from \"react-router-dom\";\n\n                        <button type = 'close' onClick={this.props.closePopedMessage}>Cancel/Close</button>\n                    </center>\n                </form>\n                  \n                </div>\n              );\n    }\n\n    render() {\n      console.log(this.props.toPop);\n      return (\n        <div className='popup'>\n            {this.props.toPop && this.renderMessage()}\n        </div>\n      );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return { \n        message: state.fetchReducers.popUpMessage,\n        popUpMessage: state.popMessageReducer.popUpMessage,\n        toPop: state.popMessageReducer.popUp,\n    };\n}\nconst mapDispatchToProps = (dispatch) => {\n    return {\n      closePopedMessage: () => {\n        dispatch(closePopedMessage());\n      },\n      updataMessage: (url,data,method) => {\n        dispatch(uploadData(url,data,method));\n      },\n      changePopedMessage: (name,value) =>{\n        dispatch(changePopedMessage(name,value));\n      }\n    }\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(Popup);\n\n\n"]},"metadata":{},"sourceType":"module"}