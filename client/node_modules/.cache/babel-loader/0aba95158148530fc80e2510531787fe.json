{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Workspaces/cpsc436assignment2/client/src/components/PopUp.js\";\nimport React from 'react';\nimport './style.css';\nimport { connect } from 'react-redux';\nimport { closePopedMessage } from '../actions/popUpActions';\n\nclass Popup extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.renderMessage = () => {\n      return React.createElement(\"div\", {\n        className: \"popup_inner\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"fname\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }, \"From\"), React.createElement(\"input\", {\n        type: \"text\",\n        name: \"fromname\",\n        defaultValue: this.props.message.fromname,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        htmlFor: \"tname\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }, \"To\"), React.createElement(\"input\", {\n        type: \"text\",\n        name: \"toname\",\n        defaultValue: this.props.message.toname,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        htmlFor: \"Category\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, \"Category\"), React.createElement(\"input\", {\n        type: \"text\",\n        name: \"category\",\n        defaultValue: this.props.message.category,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        htmlFor: \"subject\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, \"Content\"), React.createElement(\"input\", {\n        type: \"text\",\n        name: \"textcontent\",\n        defaultValue: this.props.message.textcontent,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        type: \"close\",\n        onClick: this.props.closePopedMessage,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, \"Cancel/Close\"), React.createElement(\"button\", {\n        type: \"edit\",\n        onClick: this.props.uploadChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, \"save change\"));\n    };\n\n    this.state = {\n      fromname: this.props.message.fromname,\n      toname: '',\n      category: '',\n      textcontent: ''\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  uploadChange() {\n    const data = this.state;\n    this.props.postMessage('http://localhost:3001/changeMessage/' + this.props.index, data);\n  }\n\n  handleChange(event) {\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"popup\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, this.renderMessage());\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    message: state.fetchReducers.popUpMessage\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    closePopedMessage: () => {\n      dispatch(closePopedMessage());\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Popup);","map":{"version":3,"sources":["/Users/mac/Workspaces/cpsc436assignment2/client/src/components/PopUp.js"],"names":["React","connect","closePopedMessage","Popup","Component","constructor","props","renderMessage","message","fromname","toname","category","textcontent","uploadChange","state","handleChange","bind","handleSubmit","data","postMessage","index","event","setState","target","name","value","render","mapStateToProps","fetchReducers","popUpMessage","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './style.css'\nimport { connect } from 'react-redux';\nimport { closePopedMessage } from '../actions/popUpActions';\n\n\nclass Popup extends React.ComponentÂ {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            fromname: this.props.message.fromname,\n            toname: '',\n            category: '',\n            textcontent: ''\n        };\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n    uploadChange () {\n        const data = this.state;\n        this.props.postMessage('http://localhost:3001/changeMessage/' + this.props.index, data);\n    }\n    handleChange (event) {\n        this.setState({ [event.target.name]: event.target.value });\n    }\n\n    renderMessage = () => {\n      return (\n                <div className='popup_inner' >\n                  <label htmlFor=\"fname\">From</label>\n                  <input type = 'text' name = 'fromname' defaultValue = {this.props.message.fromname}/>\n                  <label htmlFor=\"tname\">To</label>\n                  <input type = 'text' name = 'toname' defaultValue = {this.props.message.toname}/>\n                  <label htmlFor=\"Category\">Category</label>\n                  <input type = 'text' name = 'category' defaultValue = {this.props.message.category}/>\n                  <label htmlFor=\"subject\">Content</label>\n                  <input type = 'text' name = 'textcontent' defaultValue = {this.props.message.textcontent}/>\n                  <button type = 'close' onClick={this.props.closePopedMessage}>Cancel/Close</button>\n                  <button type = 'edit' onClick={this.props.uploadChange}>save change</button>\n                </div>\n              );\n    }\n\n    render() {\n      return (\n        <div className='popup'>\n            {this.renderMessage()}\n        </div>\n      );\n    }\n}\nconst mapStateToProps = (state) => {\n    return { \n        message: state.fetchReducers.popUpMessage\n    };\n}\nconst mapDispatchToProps = (dispatch) => {\n    return {\n      closePopedMessage: () => {\n        dispatch(closePopedMessage());\n      }\n    }\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(Popup);\n\n\n"]},"metadata":{},"sourceType":"module"}